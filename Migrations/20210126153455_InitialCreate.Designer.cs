// <auto-generated />
using System;
using AplikasiPerpustakaan.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AplikasiPerpustakaan.Migrations
{
    [DbContext(typeof(DbContextBook))]
    [Migration("20210126153455_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("AplikasiPerpustakaan.Models.Author", b =>
                {
                    b.Property<int>("Id_Author")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("asal")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("hobi")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("pena")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("penulis")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<int>("umur")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id_Author");

                    b.ToTable("Author");
                });

            modelBuilder.Entity("AplikasiPerpustakaan.Models.Book", b =>
                {
                    b.Property<int>("Id_Book")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AuthorId_Author")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Id_Author")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Id_Publisher")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PublisherId_Publisher")
                        .HasColumnType("INTEGER");

                    b.Property<string>("genre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("judul")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("jumlah")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id_Book");

                    b.HasIndex("AuthorId_Author");

                    b.HasIndex("PublisherId_Publisher");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("AplikasiPerpustakaan.Models.Borrow", b =>
                {
                    b.Property<int>("Id_Borrow")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BookId_Book")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Id_Book")
                        .HasColumnType("INTEGER");

                    b.Property<int>("lama_pinjam")
                        .HasColumnType("INTEGER");

                    b.Property<string>("nama_peminjam")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("tanggal_pinjam")
                        .HasColumnType("TEXT");

                    b.HasKey("Id_Borrow");

                    b.HasIndex("BookId_Book");

                    b.ToTable("Borrow");
                });

            modelBuilder.Entity("AplikasiPerpustakaan.Models.Publisher", b =>
                {
                    b.Property<int>("Id_Publisher")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("alamat")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("pemimpin")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("penerbit")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id_Publisher");

                    b.ToTable("Publisher");
                });

            modelBuilder.Entity("AplikasiPerpustakaan.Models.Return", b =>
                {
                    b.Property<int>("Id_Return")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BorrowId_Borrow")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Id_Borrow")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ket")
                        .HasColumnType("TEXT");

                    b.Property<string>("nama_pengembali")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("tanggal_pengembalian")
                        .HasColumnType("TEXT");

                    b.HasKey("Id_Return");

                    b.HasIndex("BorrowId_Borrow");

                    b.ToTable("Return");
                });

            modelBuilder.Entity("AplikasiPerpustakaan.Models.Book", b =>
                {
                    b.HasOne("AplikasiPerpustakaan.Models.Author", "Author")
                        .WithMany("Book")
                        .HasForeignKey("AuthorId_Author");

                    b.HasOne("AplikasiPerpustakaan.Models.Publisher", "Publisher")
                        .WithMany("Book")
                        .HasForeignKey("PublisherId_Publisher");

                    b.Navigation("Author");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("AplikasiPerpustakaan.Models.Borrow", b =>
                {
                    b.HasOne("AplikasiPerpustakaan.Models.Book", "Book")
                        .WithMany("Borrow")
                        .HasForeignKey("BookId_Book");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("AplikasiPerpustakaan.Models.Return", b =>
                {
                    b.HasOne("AplikasiPerpustakaan.Models.Borrow", "Borrow")
                        .WithMany()
                        .HasForeignKey("BorrowId_Borrow");

                    b.Navigation("Borrow");
                });

            modelBuilder.Entity("AplikasiPerpustakaan.Models.Author", b =>
                {
                    b.Navigation("Book");
                });

            modelBuilder.Entity("AplikasiPerpustakaan.Models.Book", b =>
                {
                    b.Navigation("Borrow");
                });

            modelBuilder.Entity("AplikasiPerpustakaan.Models.Publisher", b =>
                {
                    b.Navigation("Book");
                });
#pragma warning restore 612, 618
        }
    }
}
